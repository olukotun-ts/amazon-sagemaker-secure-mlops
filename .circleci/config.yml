# @todo:
    # - Add bucket creation to CloudFormation template. Can source local file: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-cli-creating-stack.html
          # - delete as part of teardown
    # - Use Lambda to empty bucket before delete
    #     - https://stackoverflow.com/questions/40383470/can-i-force-cloudformation-to-delete-non-empty-s3-bucket
    #     - write Lambda function
    #     - add to template resource:
    #         EmptyBucketOnDelete:
    #           Type: Custom::EmptyBucketOnDelete
    #           Properties:
    #             ServiceToken:
    #             BucketName: !Ref CFNBucketName
    #             OnDelete: true
      # - Why do created roles stay in account after stack deletion?
          # - delete as part of teardown
    # - Create dev IAM user
    # - For jobs that deploy cfn templates, rollback or delete deployed pieces on fail
    # - Security scan for CloudFormation templates
    #     - AWS CloudFormation Guard: https://docs.aws.amazon.com/cfn-guard/latest/ug/what-is-guard.html
    #     - Snyk: https://snyk.io/blog/scan-aws-cloudformation-misconfigurations-snyk-iac/
    # - Install runner with cfn
          
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0.0

jobs:
  deploy-templates:
    docker:
      - image: cimg/aws:2023.06
    resource_class: small
    environment:
      STACK_NAME: sandbox
    steps:
      - checkout
      - aws-cli/assume_role_with_web_identity:
          role_arn: $AWS_ROLE_ARN
      - run:
          name: Deploy CloudFormation template
          command: |
            aws cloudformation deploy   \
                --template-file cfn_templates/_sandbox.yaml   \
                --stack-name $STACK_NAME  \
                --region $AWS_DEFAULT_REGION
          no_output_timeout: 1h
      - run:
          name: List events leading up to failure
          command: aws cloudformation describe-stack-events --stack-name $STACK_NAME
          when: on_fail
  delete-stack:
    docker:
      - image: cimg/aws:2023.06
    resource_class: small
    environment:
      STACK_NAME: sandbox
    steps:
      - aws-cli/assume_role_with_web_identity:
          role_arn: $AWS_ROLE_ARN
      - run:
          name: Delete CloudFormation stacks
          command: |
            aws cloudformation delete-stack --stack-name $STACK_NAME
            aws cloudformation wait stack-delete-complete --stack-name $STACK_NAME
          no_output_timeout: 1h

workflows:
  deploy_infra:
    jobs:
      - deploy-templates:
          context: [aws_default]
      - approve-delete:
          type: approval
          requires: [deploy-templates]
      - delete-stack:
          context: [aws_default]
          requires: [approve-delete]
